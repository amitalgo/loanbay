<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class JobPosted extends \App\Entities\JobPosted implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'id', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobTitle', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'noOfPosition', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'experience', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobLocation', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobTypeId', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobSkill', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobDescription', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'isClosed', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'userId', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'isActive', 'createdAt', 'updatedAt', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobApplied'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'id', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobTitle', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'noOfPosition', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'experience', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobLocation', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobTypeId', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobSkill', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobDescription', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'isClosed', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'userId', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'isActive', 'createdAt', 'updatedAt', '' . "\0" . 'App\\Entities\\JobPosted' . "\0" . 'jobApplied'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (JobPosted $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobTitle(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobTitle', []);

        return parent::getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobTitle(string $jobTitle): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobTitle', [$jobTitle]);

        parent::setJobTitle($jobTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoOfPosition(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoOfPosition', []);

        return parent::getNoOfPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoOfPosition(string $noOfPosition): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoOfPosition', [$noOfPosition]);

        parent::setNoOfPosition($noOfPosition);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', []);

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience(string $experience): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', [$experience]);

        parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobLocation(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobLocation', []);

        return parent::getJobLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobLocation(string $jobLocation): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobLocation', [$jobLocation]);

        parent::setJobLocation($jobLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobTypeId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobTypeId', []);

        return parent::getJobTypeId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobTypeId($jobTypeId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobTypeId', [$jobTypeId]);

        parent::setJobTypeId($jobTypeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobSkill(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobSkill', []);

        return parent::getJobSkill();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobSkill(string $jobSkill): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobSkill', [$jobSkill]);

        parent::setJobSkill($jobSkill);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobDescription(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobDescription', []);

        return parent::getJobDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobDescription(string $jobDescription): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobDescription', [$jobDescription]);

        parent::setJobDescription($jobDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getisClosed(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisClosed', []);

        return parent::getisClosed();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsClosed(string $isClosed): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsClosed', [$isClosed]);

        parent::setIsClosed($isClosed);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($userId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getisActive(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisActive', []);

        return parent::getisActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive(string $isActive): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserRole', []);

        return parent::getUserRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserRole($userRole): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserRole', [$userRole]);

        parent::setUserRole($userRole);
    }

    /**
     * {@inheritDoc}
     */
    public function onPrePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPrePersist', []);

        return parent::onPrePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', []);

        return parent::onPreUpdate();
    }

}
